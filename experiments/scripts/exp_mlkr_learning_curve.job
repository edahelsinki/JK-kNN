#!/bin/bash
# This script runs a CV experiment for k-NN replacement

run_cmd() {
if [ "$DEBUG" = true ]; then
        echo "$@"
    else
        "$@"
    fi
}

# DATA PREPROCESSING
DB_PATH="/home/kubeckaj/US/A5_nn/US-NN_1sa_1sa/QC/collectionQC.pkl"
NUM_FOLDS=5
CPUS=8
PARTITION="q64,q48,q40"
DEBUG=false
HYPERTRAIN_SIZE=5000
N_VALUES=()
MONOMER_DB=""
REPRESENTATIONS=()

while [[ "$#" -gt 0 ]]; do
    case $1 in 
        --db) DB_PATH="$2"; shift;;
        --cv-folds) NUM_FOLDS="$2"; shift;;
        --cpu) CPUS="$2"; shift;;
        -p|--par) PARTITION="$2"; shift;;
        -n) DEBUG=true;;
        -s|--samples)
            shift
            while [[ $# -gt 0 && ! "$1" =~ ^- ]]; do
                N_VALUES+=("$1")
                shift
            done;;
        -r|--repr)
            shift
            while [[ $# -gt 0 && ! "$1" =~ ^- ]]; do
                REPRESENTATIONS+=("$1")
                shift
            done;;
		-m|--monomers) MONOMER_DB="$2"; shift;;
        --help) echo "Usage: exp_mlkr_learning_curve.sh --db <path_to_db> [-m <path_to_monomers>] --k <folds> --cpu <num_cpus> -p <partition> [-s|--samples] <sample counts> [-n]"; exit 0 ;;
        *) echo "Unknown option: $1"; exit 1;;
    esac
    shift
done

if [[ ${#N_VALUES[@]} -eq 0 ]]; then
    N_VALUES=(100 500 1000 5000 10000 13000)
fi
if [[ ${#REPRESENTATIONS[@]} -eq 0 ]]; then
    REPRESENTATIONS=("fchl" "mbdf")
fi

DB_NAME=$(basename "$DB_PATH" | cut -d. -f1)
echo "Using DB fhom $DB_PATH."
SCRIPT_PATH="$(realpath "$0")"
ROOT_DIR=$(dirname "$(dirname "$(dirname "$SCRIPT_PATH")")")
LOCAL_DATA_PATH=$(realpath --canonicalize-missing "$ROOT_DIR/data/$DB_NAME")
RESULT_DIR=$(realpath --canonicalize-missing "$ROOT_DIR/experiments/results/$DB_NAME")
mkdir -p "$RESULT_DIR"

# train MLKR on folds
for repr in "${REPRESENTATIONS[@]}"; do
 
    for ((i=0; i<NUM_FOLDS; i++)); do
        for n_samples in "${N_VALUES[@]}"; do
            MLKR_MODEL_PATH="$RESULT_DIR/mlkr_${i}_${repr}_${n_samples}.pkl"
            if [ -e "$MLKR_MODEL_PATH" ]; then
                echo "Found trained MLKR model at $MLKR_MODEL_PATH, not retraining!"
                continue
            fi
            echo "Submit MLKR job for chunk ${i} with ${repr} metric, n=${n_samples}."
            MLKR_RESULTS="$RESULT_DIR/mlkr_${i}_${repr}_${n_samples}_trainout.pkl"
            if [[ -n "$MONOMER_DB" ]]; then
                run_cmd JKML -mlkr -repr "$repr" -train "$LOCAL_DATA_PATH/db_fold${i}_${n_samples}.pkl" -monomers "$LOCAL_DATA_PATH/db_monomer.pkl" -test "$LOCAL_DATA_PATH/db_test${i}.pkl" -par "$PARTITION" -time 08:00:00 -cpu "$CPUS" -varsout "$MLKR_MODEL_PATH" -out "$MLKR_RESULTS"
            else
                run_cmd JKML -mlkr -repr "$repr" -train "$LOCAL_DATA_PATH/db_fold${i}_${n_samples}.pkl" -test "$LOCAL_DATA_PATH/db_test${i}.pkl" -par "$PARTITION" -time 08:00:00 -cpu "$CPUS" -varsout "$MLKR_MODEL_PATH" -out "$MLKR_RESULTS"
            fi
        done


    done

done
